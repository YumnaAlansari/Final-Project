{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContentService {\n  /*  updateById/2\n     private readonly API_URL_POST_MUSIC = \"localhost:8080/api/Music/addMusic\";\n  private readonly API_URL_DELETE_MUSIC = \"localhost:8080/api/Music/deleteById/1\";\n  private readonly API_URL_POST_THEATRE = \"localhost:8080/api/Theatre\";\n  private readonly API_URL_DELETE_THEATRE = \"localhost:8080/api/Theatre/deleteById/1\"; */\n  constructor(http) {\n    this.http = http;\n    this.API_URL_GET_CINEMA = \"http://localhost:8080/api/Cinema\";\n    this.API_URL_POST_CINEMA = \"localhost:8080/api/Cinema/addCinema\";\n    this.API_URL_PUT_CINEMA = \"http://localhost:8080/api/Cinema/updateById/2\";\n    this.API_URL_DELETE_CINEMA = \"localhost:8080/api/Cinema/deleteById/1\";\n    this.API_URL_GET_MUSIC = \"localhost:8080/api/Music\";\n    this.API_URL_GET_THEATRE = \"localhost:8080/api/Theatre\";\n  }\n  // CINEMA\n  getCinema() {\n    return this.http.get(this.API_URL_GET_CINEMA);\n  }\n  postCinema(body) {\n    return this.http.post(this.API_URL_POST_CINEMA, body);\n  }\n  putCinema(id, body) {\n    return this.http.put(`${this.API_URL_PUT_CINEMA}/${id}`, body);\n  }\n  deleteCinema(id) {\n    return this.http.put(`${this.API_URL_DELETE_CINEMA}/${id}`);\n  }\n  // MUSIC\n  getMusic() {\n    return this.http.get(this.API_URL_GET_MUSIC);\n  }\n  // THEATRE\n  getTheatre() {\n    return this.http.get(this.API_URL_GET_THEATRE);\n  }\n  static #_ = this.ɵfac = function ContentService_Factory(t) {\n    return new (t || ContentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContentService,\n    factory: ContentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ContentService","constructor","http","API_URL_GET_CINEMA","API_URL_POST_CINEMA","API_URL_PUT_CINEMA","API_URL_DELETE_CINEMA","API_URL_GET_MUSIC","API_URL_GET_THEATRE","getCinema","get","postCinema","body","post","putCinema","id","put","deleteCinema","getMusic","getTheatre","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/money/Desktop/IronHack/front/Final-Project-One-Html-Page-New/src/app/services/content.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n\n  private readonly API_URL_GET_CINEMA = \"http://localhost:8080/api/Cinema\";\n  private readonly API_URL_POST_CINEMA = \"localhost:8080/api/Cinema/addCinema\";\n  private readonly API_URL_PUT_CINEMA = \"http://localhost:8080/api/Cinema/updateById/2\";\n  private readonly API_URL_DELETE_CINEMA = \"localhost:8080/api/Cinema/deleteById/1\";\n  private readonly API_URL_GET_MUSIC = \"localhost:8080/api/Music\";\n  private readonly API_URL_GET_THEATRE = \"localhost:8080/api/Theatre\";\n\n  /*  updateById/2\n\n  private readonly API_URL_POST_MUSIC = \"localhost:8080/api/Music/addMusic\";\n  private readonly API_URL_DELETE_MUSIC = \"localhost:8080/api/Music/deleteById/1\";\n  private readonly API_URL_POST_THEATRE = \"localhost:8080/api/Theatre\";\n  private readonly API_URL_DELETE_THEATRE = \"localhost:8080/api/Theatre/deleteById/1\"; */\n\n  constructor(private http: HttpClient) { }\n\n  // CINEMA\n  getCinema(): Observable<any> {\n    return this.http.get<any>(this.API_URL_GET_CINEMA)}\n\n  postCinema(body: any): Observable<any> {\n    return this.http.post<any>(this.API_URL_POST_CINEMA,body);}\n\n  putCinema(id: number,body: any): Observable<any> {\n    return this.http.put<any>(`${this.API_URL_PUT_CINEMA}/${id}`,body);    }\n\n    deleteCinema(id: number): Observable<any> {\n      return this.http.put<any>(`${this.API_URL_DELETE_CINEMA}/${id}`);    }\n\n  // MUSIC\n  getMusic(): Observable<any> {\n    return this.http.get<any>(this.API_URL_GET_MUSIC)}\n\n  // THEATRE\n  getTheatre(): Observable<any> {\n    return this.http.get<any>(this.API_URL_GET_THEATRE)}\n    /*\n\n\n\n  postMusic(body: any): Observable<any> {\n    return this.http.post<any>(this.API_URL_POST_CINEMA,body);}\n\n  postTheatre(body: any): Observable<any> {\n    return this.http.post<any>(this.API_URL_POST_CINEMA,body);}\n\n    */\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EASzB;;;;;EAOAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAdP,KAAAC,kBAAkB,GAAG,kCAAkC;IACvD,KAAAC,mBAAmB,GAAG,qCAAqC;IAC3D,KAAAC,kBAAkB,GAAG,+CAA+C;IACpE,KAAAC,qBAAqB,GAAG,wCAAwC;IAChE,KAAAC,iBAAiB,GAAG,0BAA0B;IAC9C,KAAAC,mBAAmB,GAAG,4BAA4B;EAS3B;EAExC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACP,kBAAkB,CAAC;EAAA;EAEpDQ,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAM,IAAI,CAACT,mBAAmB,EAACQ,IAAI,CAAC;EAAC;EAE5DE,SAASA,CAACC,EAAU,EAACH,IAAS;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACc,GAAG,CAAM,GAAG,IAAI,CAACX,kBAAkB,IAAIU,EAAE,EAAE,EAACH,IAAI,CAAC;EAAK;EAEvEK,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAM,GAAG,IAAI,CAACV,qBAAqB,IAAIS,EAAE,EAAE,CAAC;EAAK;EAEzE;EACAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAAChB,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACH,iBAAiB,CAAC;EAAA;EAEnD;EACAY,UAAUA,CAAA;IACR,OAAO,IAAI,CAACjB,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACF,mBAAmB,CAAC;EAAA;EAAC,QAAAY,CAAA,G;qBArC3CpB,cAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdzB,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}