{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CinemaComponent = class CinemaComponent {\n  constructor(contentService) {\n    this.contentService = contentService;\n    // const project ={category, director};\n    this.cinemaList = [];\n    this.id = 100;\n  }\n  ngOnInit() {\n    this.getCinema();\n  }\n  getCinema() {\n    this.contentService.getCinema().subscribe({\n      next: data => {\n        console.log(data);\n        this.cinemaList = data;\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n  postCinema() {\n    const body = {\n      id: 70,\n      name: \"The Paremt\",\n      duration: 120.50,\n      director: \"sara\",\n      numberOfActors: 9,\n      releaseYear: 2022,\n      category: \"Drama\"\n    };\n    this.contentService.postCinema(body).subscribe({\n      next: data => {\n        alert(\"Cinema posted successfuly\");\n        this.getCinema();\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n  putCinema() {\n    const body = {\n      id: this.id,\n      name: \"The Paremt\",\n      duration: 130.50,\n      director: \"sara\",\n      numberOfActors: 9,\n      releaseYear: 2022,\n      category: \"Drama\"\n    };\n    this.contentService.putCinema(this.id, body).subscribe({\n      next: data => {\n        alert(\"Cinema modifed successfuly\");\n        this.getCinema();\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n  delateCinema() {\n    this.contentService.deleteCinema(this.id).subscribe({\n      next: data => {\n        alert(\"Cinema deleted successfuly\");\n        this.getCinema();\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n};\nCinemaComponent = __decorate([Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})], CinemaComponent);","map":{"version":3,"names":["Component","CinemaComponent","constructor","contentService","cinemaList","id","ngOnInit","getCinema","subscribe","next","data","console","log","error","e","postCinema","body","name","duration","director","numberOfActors","releaseYear","category","alert","putCinema","delateCinema","deleteCinema","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/money/Desktop/IronHack/front/Final-Project-One-Html-Page-New/src/app/components/cinema/cinema.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ContentService } from 'src/app/services/content.service';\n\n@Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})\nexport class CinemaComponent implements OnInit{\n\n  // const project ={category, director};\n  cinemaList: any[] = [];\n  id: number = 100;\n\n  constructor(private contentService: ContentService){}\n  ngOnInit(): void {\n    this.getCinema();\n  }\n\n  getCinema(): void{\n    this.contentService.getCinema().subscribe({\n      next: (data:any[]) => {\n        console.log(data);\n        this.cinemaList = data;\n      },\n      error: (e) =>{\n        console.log(e);\n      }\n    })\n  }\n\n  postCinema(): void {\n    const body = {\n    id: 70,\n    name: \"The Paremt\",\n    duration: 120.50,\n    director: \"sara\",\n    numberOfActors: 9,\n    releaseYear: 2022,\n    category: \"Drama\"\n  };\n\n  this.contentService.postCinema(body).subscribe({\n    next: (data) =>{\n      alert(\"Cinema posted successfuly\");\n      this.getCinema();\n    },\n    error: (e) => {\n      console.log(e);\n    }\n  })\n\n}\nputCinema(): void {\n  const body = {\n  id: this.id,\n  name: \"The Paremt\",\n  duration: 130.50,\n  director: \"sara\",\n  numberOfActors: 9,\n  releaseYear: 2022,\n  category: \"Drama\"\n};\n\nthis.contentService.putCinema(this.id, body).subscribe({\n  next: (data) =>{\n    alert(\"Cinema modifed successfuly\");\n    this.getCinema();\n  },\n  error: (e) => {\n    console.log(e);\n  }\n})\n\n}\n\n\n\ndelateCinema(): void{\n  this.contentService.deleteCinema(this.id).subscribe({\n    next: (data) =>{\n      alert(\"Cinema deleted successfuly\");\n      this.getCinema();\n    },\n    error: (e) =>{\n      console.log(e);\n    }\n  })\n}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAJlC;IACA,KAAAC,UAAU,GAAU,EAAE;IACtB,KAAAC,EAAE,GAAW,GAAG;EAEoC;EACpDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,cAAc,CAACI,SAAS,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,IAAU,IAAI;QACnBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACN,UAAU,GAAGM,IAAI;MACxB,CAAC;MACDG,KAAK,EAAGC,CAAC,IAAI;QACXH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB;KACD,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,MAAMC,IAAI,GAAG;MACbX,EAAE,EAAE,EAAE;MACNY,IAAI,EAAE,YAAY;MAClBC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE,MAAM;MAChBC,cAAc,EAAE,CAAC;MACjBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;KACX;IAED,IAAI,CAACnB,cAAc,CAACY,UAAU,CAACC,IAAI,CAAC,CAACR,SAAS,CAAC;MAC7CC,IAAI,EAAGC,IAAI,IAAI;QACba,KAAK,CAAC,2BAA2B,CAAC;QAClC,IAAI,CAAChB,SAAS,EAAE;MAClB,CAAC;MACDM,KAAK,EAAGC,CAAC,IAAI;QACXH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB;KACD,CAAC;EAEJ;EACAU,SAASA,CAAA;IACP,MAAMR,IAAI,GAAG;MACbX,EAAE,EAAE,IAAI,CAACA,EAAE;MACXY,IAAI,EAAE,YAAY;MAClBC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE,MAAM;MAChBC,cAAc,EAAE,CAAC;MACjBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;KACX;IAED,IAAI,CAACnB,cAAc,CAACqB,SAAS,CAAC,IAAI,CAACnB,EAAE,EAAEW,IAAI,CAAC,CAACR,SAAS,CAAC;MACrDC,IAAI,EAAGC,IAAI,IAAI;QACba,KAAK,CAAC,4BAA4B,CAAC;QACnC,IAAI,CAAChB,SAAS,EAAE;MAClB,CAAC;MACDM,KAAK,EAAGC,CAAC,IAAI;QACXH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB;KACD,CAAC;EAEF;EAIAW,YAAYA,CAAA;IACV,IAAI,CAACtB,cAAc,CAACuB,YAAY,CAAC,IAAI,CAACrB,EAAE,CAAC,CAACG,SAAS,CAAC;MAClDC,IAAI,EAAGC,IAAI,IAAI;QACba,KAAK,CAAC,4BAA4B,CAAC;QACnC,IAAI,CAAChB,SAAS,EAAE;MAClB,CAAC;MACDM,KAAK,EAAGC,CAAC,IAAI;QACXH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB;KACD,CAAC;EACJ;CAEC;AAlFYb,eAAe,GAAA0B,UAAA,EAL3B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW7B,eAAe,CAkF3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}